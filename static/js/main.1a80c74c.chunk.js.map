{"version":3,"sources":["config.js","api/APIUtils.js","components/ChampionAvatar.js","components/ChampionListItem.js","components/ChampionsList.js","components/ChampionFilter.js","components/ChampionsFilters.js","components/ChampionsSearchForm.js","components/ChampionsSearcher.js","components/ChampionsInfo.js","Utils.js","components/App.js","reportWebVitals.js","index.js"],"names":["championsTags","LOL_VERSION","DATADRAGON_CDN_URL","DATADRAGON_DATA_FILES_URL","DATADRAGON_IMAGES_URL","getAllChampions","a","axios","result","championsData","data","ChampionAvatar","props","src","championImage","alt","championName","width","height","ChampionListItem","className","ChampionsList","Object","keys","champions","map","key","champion","name","image","group","full","ChampionFilter","onClick","event","filterName","selected","ChampionsFilters","filters","filter","onFilterClick","selectedTagFilter","ChampionsSearchForm","value","placeholder","onChange","onInputChange","target","ChampionsSearcher","Config","searchValue","onSearchInputChange","ChampionsInfo","useState","setChampions","filteredChampions","setFilteredChampions","searchFilter","setSearchFilter","tagFilter","setTagFilter","isLoading","setIsLoading","isError","setIsError","useEffect","APIUtils","fetchData","filteredData","object","filterKey","toLowerCase","includes","reduce","newObject","tag","championKey","tags","Utils","console","log","filterChampionsList","searchInputValue","tagValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a80c74c.chunk.js","sourcesContent":["export const championsTags = [\r\n  'Assassin',\r\n  'Fighter',\r\n  'Mage',\r\n  'Marksman',\r\n  'Support',\r\n  'Tank'\r\n];\r\n","import axios from 'axios';\r\n\r\nconst LOL_VERSION = '11.11.1';\r\nconst LANGUAGE = 'en_US';\r\nconst DATADRAGON_CDN_URL = 'https://ddragon.leagueoflegends.com/cdn';\r\nconst DATADRAGON_API_URL = 'https://ddragon.leagueoflegends.com/api';\r\nconst DATADRAGON_DATA_FILES_URL = `${DATADRAGON_CDN_URL}/${LOL_VERSION}/data/${LANGUAGE}`;\r\nexport const DATADRAGON_IMAGES_URL = `${DATADRAGON_CDN_URL}/${LOL_VERSION}\\\\img`; \r\n\r\nexport const getAvailableLanguages = async () => {\r\n  const result = await axios(`${DATADRAGON_CDN_URL}/languages.json`);\r\n\r\n  return result.data;\r\n};\r\n\r\n// get the latest datadragon version\r\nexport const getLatestVersion = async () => {\r\n  let latestVersion;\r\n  const result = await axios(`${DATADRAGON_API_URL}/versions.json`);\r\n\r\n  if (result.data) {\r\n    latestVersion = result.data[0];\r\n  }\r\n  return latestVersion;\r\n};\r\n\r\n// get all the datadragon versions\r\nexport const getVersions = async () => {\r\n  const result = await axios(`${DATADRAGON_API_URL}/versions.json`);\r\n  return result.data;\r\n};\r\n\r\n// get all lol champions data\r\nexport const getAllChampions = async () => {\r\n  const result = await axios(`${DATADRAGON_DATA_FILES_URL}/champion.json`);\r\n  const championsData = result.data.data;\r\n\r\n  return championsData;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ChampionAvatar(props) {\r\n  return (\r\n    <img src={props.championImage} alt={props.championName} width={props.width} height={props.height} />\r\n  );\r\n}\r\n\r\nChampionAvatar.propTypes = {\r\n  championImage: PropTypes.string,\r\n  championName: PropTypes.string,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nexport default ChampionAvatar;\r\n","import PropTypes from 'prop-types';\r\nimport ChampionAvatar from './ChampionAvatar';\r\n\r\nfunction ChampionListItem(props) {\r\n  return (\r\n    <div className=\"champions-list-item\">\r\n      <ChampionAvatar \r\n        championImage={props.championImage} \r\n        championName={props.championName} \r\n        width={100}\r\n        height={100}\r\n      />\r\n      <p>{props.championName}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionListItem.propTypes = {\r\n  championImage: PropTypes.string,\r\n  championName: PropTypes.string\r\n};\r\n\r\nexport default ChampionListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ChampionListItem from './ChampionListItem';\r\nimport { DATADRAGON_IMAGES_URL } from '../api/APIUtils';\r\n\r\nfunction ChampionsList(props) {\r\n\r\n  return (\r\n    <div className=\"champions-list\">\r\n      {Object.keys(props.champions).map(key => {\r\n        const champion = props.champions[key];\r\n\r\n        return <ChampionListItem \r\n                key={champion.key}\r\n                championName={champion.name}\r\n                championImage={`${DATADRAGON_IMAGES_URL}\\\\${champion.image.group}\\\\${champion.image.full}`} \r\n              />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsList.propTypes = {\r\n  champions: PropTypes.object\r\n};\r\n\r\nexport default ChampionsList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ChampionFilter(props) {\r\n  function handleClick(event) {\r\n    props.onClick(props.filterName);\r\n  }\r\n  return (\r\n    <button \r\n      onClick={handleClick} \r\n      className={`tag-filter-button ${props.selected ? 'tag-filter-button--selected' : ''}`}>\r\n        {props.filterName}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ChampionFilter;\r\n\r\nChampionFilter.propTypes = {\r\n  filterName: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ChampionFilter from './ChampionFilter';\r\n\r\nfunction ChampionsFilters(props) {\r\n  return (\r\n    <div className=\"champions-filter\">\r\n      {props.filters.map(filter => {\r\n        return <ChampionFilter \r\n                filterName={filter} \r\n                onClick={props.onFilterClick} \r\n                selected={filter === props.selectedTagFilter}\r\n              />\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsFilters.propTypes = {\r\n  filters: PropTypes.array,\r\n  selectedTagFilter: PropTypes.string,\r\n  onFilterClick: PropTypes.func\r\n};\r\n\r\nexport default ChampionsFilters;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ChampionsSearchForm(props) {\r\n\r\n  function handleInputChange(event) {\r\n    props.onInputChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <form className=\"champion-search-form\">\r\n      <input \r\n        className=\"champion-search-form__input\"\r\n        value={props.value}\r\n        placeholder=\"Search for a champion...\"\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\n// function useSearchForm(props) {\r\n//   const [search, setSearch] = useState(null);\r\n\r\n//   return {search, setSearch};\r\n// }\r\n\r\n\r\nChampionsSearchForm.propTypes = {\r\n  value: PropTypes.string,\r\n  onInputChange: PropTypes.func\r\n};\r\n\r\nexport default ChampionsSearchForm;\r\n","import PropTypes from 'prop-types';\r\nimport * as Config from '../config';\r\nimport ChampionsList from './ChampionsList';\r\nimport ChampionsFilters from './ChampionsFilters';\r\nimport ChampionsSearchForm from './ChampionsSearchForm.js';\r\n\r\nfunction ChampionsSearcher(props) \r\n{\r\n  return (\r\n    <div className=\"champions-searcher\">\r\n      <ChampionsFilters \r\n        filters={['All', ...Config.championsTags]} \r\n        selectedTagFilter={props.selectedTagFilter}\r\n        onFilterClick={props.onFilterClick} \r\n      />\r\n      <ChampionsSearchForm value={props.searchValue} onInputChange={props.onSearchInputChange} />\r\n      <ChampionsList champions={props.champions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nChampionsSearcher.propTypes = {\r\n  champions: PropTypes.object,\r\n  searchValue: PropTypes.string,\r\n  selectedTagFilter: PropTypes.string,\r\n  onSearchInputChange: PropTypes.func,\r\n  onFilterClick: PropTypes.func\r\n};\r\n\r\nexport default ChampionsSearcher;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport * as Config from '../config';\r\nimport * as Utils from '../Utils';\r\nimport * as APIUtils from '../api/APIUtils';\r\nimport ChampionsSearcher from './ChampionsSearcher';\r\n\r\nfunction ChampionsInfo(props) {\r\n  const [champions, setChampions] = useState([]);\r\n  const [filteredChampions, setFilteredChampions] = useState([]);\r\n  const [searchFilter, setSearchFilter] = useState('');\r\n  const [tagFilter, setTagFilter] = useState('All');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await APIUtils.getAllChampions();\r\n        setChampions(data);\r\n        setFilteredChampions(data);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // setState callback simulation with hooks\r\n  // if searchFilter or tag filter state changes, run filter function\r\n  useEffect(() => {\r\n    filterChampionsList();\r\n  }, [searchFilter, tagFilter]);\r\n\r\n  function handleSearchInputChange(searchValue) {\r\n    // action is batched to excute it in the future, similar to setState\r\n    setSearchFilter(searchValue);\r\n\r\n    // do not do this\r\n    //filterChampionsList();\r\n\r\n  }\r\n\r\n  function handleFilterClick(tagValue) {\r\n    // action is batched to excute it in the future, similar to setState\r\n\r\n    setTagFilter(tagValue);\r\n\r\n     // do not do this\r\n    //filterChampionsList();\r\n  }\r\n\r\n  function filterChampionsList() {\r\n    let filteredData;\r\n    // filtering by name\r\n    filteredData = Utils.filterObjectByKey(champions, searchFilter);\r\n    \r\n    // after filtering by name, filter by tag\r\n    filteredData = Utils.filterChampionsByTag(filteredData, tagFilter);\r\n    \r\n    console.log(filteredData);\r\n\r\n    // setting filtered data\r\n    setFilteredChampions(filteredData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"champions-info\">\r\n      {isLoading \r\n        ? <div>Loading...</div>\r\n        : <ChampionsSearcher \r\n            champions={filteredChampions} \r\n            searchInputValue={searchFilter}\r\n            selectedTagFilter={tagFilter}\r\n            onSearchInputChange={handleSearchInputChange}\r\n            onFilterClick={handleFilterClick}\r\n          />\r\n      }\r\n      {isError && <div>Something went wrong 😥</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsInfo.propTypes = {};\r\n\r\nexport default ChampionsInfo;\r\n","export const filterObjectByKey = (object, filterKey) => {\r\n  const filteredObject = Object.keys(object)\r\n    .filter((key) => key.toLowerCase().includes(filterKey.toLowerCase()))\r\n    .reduce((newObject, key) => {\r\n      newObject[key] = object[key];\r\n      return newObject;\r\n    }, {});\r\n\r\n  return filteredObject;\r\n};\r\n\r\n// filter champions by tag\r\nexport const filterChampionsByTag = (champions, tag) => {\r\n  if (tag === 'All') {\r\n    return champions;\r\n  }\r\n\r\n  const filteredData = Object.keys(champions)\r\n    .filter((championKey) => {\r\n      return champions[championKey].tags.includes(tag);\r\n    })\r\n    .reduce((newObject, key) => {\r\n      newObject[key] = champions[key];\r\n      return newObject;\r\n    }, {});\r\n\r\n  return filteredData;\r\n};\r\n","import ChampionsInfo from './ChampionsInfo';\r\nimport ChampionsList from './ChampionsList';\r\nimport ChampionListItem from './ChampionListItem';\r\nimport ChampionsFilters from './ChampionsFilters';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div>\r\n      {/* <h1>Lapp</h1> */}\r\n      <ChampionsInfo />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}