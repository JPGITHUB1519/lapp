{"version":3,"sources":["components/Home.js","config.js","api/APIUtils.js","components/ChampionAvatar.js","components/ChampionListItem.js","components/ChampionsList.js","components/ChampionFilter.js","components/ChampionsFilters.js","components/ChampionsSearchForm.js","components/ChampionsSearcher.js","components/ChampionsPage.js","Utils.js","components/ChampionInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["Home","championsTags","LOL_VERSION","DATADRAGON_CDN_URL","DATADRAGON_DATA_FILES_URL","DATADRAGON_IMAGES_URL","getAllChampions","a","axios","result","championsData","data","ChampionAvatar","props","src","image","alt","width","height","ChampionListItem","champion","match","useRouteMatch","className","to","url","id","group","full","name","ChampionsList","Object","keys","champions","map","key","ChampionFilter","onClick","event","filterName","selected","ChampionsFilters","filters","filter","onFilterClick","selectedTagFilter","ChampionsSearchForm","value","placeholder","onChange","onInputChange","target","ChampionsSearcher","Config","searchValue","onSearchInputChange","length","ChampionsPage","useState","setChampions","filteredChampions","setFilteredChampions","searchFilter","setSearchFilter","tagFilter","setTagFilter","isLoading","setIsLoading","isError","setIsError","useEffect","APIUtils","fetchData","filteredData","object","filterKey","toLowerCase","includes","reduce","newObject","tag","championKey","tags","Utils","filterChampionsList","loading","size","color","searchInputValue","tagValue","ChampionInfo","useParams","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a1fc129.chunk.js","sourcesContent":["const Home = () => {\r\n  return (\r\n    <h1>HomePage</h1>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const championsTags = [\r\n  'Assassin',\r\n  'Fighter',\r\n  'Mage',\r\n  'Marksman',\r\n  'Support',\r\n  'Tank'\r\n];\r\n","import axios from 'axios';\r\nimport * as Utils from '../Utils';\r\n\r\nconst LOL_VERSION = '11.11.1';\r\nconst LANGUAGE = 'en_US';\r\nconst DATADRAGON_CDN_URL = 'https://ddragon.leagueoflegends.com/cdn';\r\nconst DATADRAGON_API_URL = 'https://ddragon.leagueoflegends.com/api';\r\nconst DATADRAGON_DATA_FILES_URL = `${DATADRAGON_CDN_URL}/${LOL_VERSION}/data/${LANGUAGE}`;\r\nexport const DATADRAGON_IMAGES_URL = `${DATADRAGON_CDN_URL}/${LOL_VERSION}\\\\img`; \r\n\r\nexport const getAvailableLanguages = async () => {\r\n  const result = await axios(`${DATADRAGON_CDN_URL}/languages.json`);\r\n\r\n  return result.data;\r\n};\r\n\r\n// get the latest datadragon version\r\nexport const getLatestVersion = async () => {\r\n  let latestVersion;\r\n  const result = await axios(`${DATADRAGON_API_URL}/versions.json`);\r\n\r\n  if (result.data) {\r\n    latestVersion = result.data[0];\r\n  }\r\n  return latestVersion;\r\n};\r\n\r\n// get all the datadragon versions\r\nexport const getVersions = async () => {\r\n  const result = await axios(`${DATADRAGON_API_URL}/versions.json`);\r\n  return result.data;\r\n};\r\n\r\n// get all lol champions data\r\nexport const getAllChampions = async () => {\r\n  const result = await axios(`${DATADRAGON_DATA_FILES_URL}/champion.json`);\r\n  const championsData = result.data.data;\r\n\r\n  return championsData;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ChampionAvatar(props) {\r\n  return (\r\n    <img src={props.image} alt={props.alt} width={props.width} height={props.height} />\r\n  );\r\n}\r\n\r\nChampionAvatar.propTypes = {\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nexport default ChampionAvatar;\r\n","import PropTypes from 'prop-types';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport ChampionAvatar from './ChampionAvatar';\r\nimport { DATADRAGON_IMAGES_URL } from '../api/APIUtils';\r\n\r\nfunction ChampionListItem(props) {\r\n  const champion = props.champion;\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    // do not use absoulute url to={/champions/....} it will be a headache to change it on the future\r\n    <Link className=\"champions-list-item\" to={`${match.url}/${champion.id}`}>\r\n      <ChampionAvatar \r\n        image={`${DATADRAGON_IMAGES_URL}\\\\${champion.image.group}\\\\${champion.image.full}`}\r\n        alt={champion.name} \r\n        width={100}\r\n        height={100}\r\n      />\r\n      <p>{champion.name}</p>\r\n    </Link>\r\n  );\r\n}\r\n\r\nChampionListItem.propTypes = {\r\n  champion: PropTypes.object\r\n};\r\n\r\nexport default ChampionListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ChampionListItem from './ChampionListItem';\r\n\r\nfunction ChampionsList(props) {\r\n\r\n  return (\r\n    <div className=\"champions-list\">\r\n      {Object.keys(props.champions).map(key => {\r\n        const champion = props.champions[key];\r\n\r\n        return <ChampionListItem \r\n                key={champion.key}\r\n                champion={champion}\r\n              />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsList.propTypes = {\r\n  champions: PropTypes.object\r\n};\r\n\r\nexport default ChampionsList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ChampionFilter(props) {\r\n  function handleClick(event) {\r\n    props.onClick(props.filterName);\r\n  }\r\n  return (\r\n    <button \r\n      onClick={handleClick} \r\n      className={`tag-filter-button ${props.selected ? 'tag-filter-button--selected' : ''}`}>\r\n        {props.filterName}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ChampionFilter;\r\n\r\nChampionFilter.propTypes = {\r\n  filterName: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ChampionFilter from './ChampionFilter';\r\n\r\nfunction ChampionsFilters(props) {\r\n  return (\r\n    <div className=\"champions-filter\">\r\n      {props.filters.map(filter => {\r\n        return <ChampionFilter \r\n                filterName={filter} \r\n                onClick={props.onFilterClick} \r\n                selected={filter === props.selectedTagFilter}\r\n              />\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsFilters.propTypes = {\r\n  filters: PropTypes.array,\r\n  selectedTagFilter: PropTypes.string,\r\n  onFilterClick: PropTypes.func\r\n};\r\n\r\nexport default ChampionsFilters;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ChampionsSearchForm(props) {\r\n\r\n  function handleInputChange(event) {\r\n    props.onInputChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <form className=\"champion-search-form\">\r\n      <input \r\n        className=\"champion-search-form__input\"\r\n        value={props.value}\r\n        placeholder=\"Search for a champion...\"\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\n// function useSearchForm(props) {\r\n//   const [search, setSearch] = useState(null);\r\n\r\n//   return {search, setSearch};\r\n// }\r\n\r\n\r\nChampionsSearchForm.propTypes = {\r\n  value: PropTypes.string,\r\n  onInputChange: PropTypes.func\r\n};\r\n\r\nexport default ChampionsSearchForm;\r\n","import PropTypes from 'prop-types';\r\nimport * as Config from '../config';\r\nimport ChampionsList from './ChampionsList';\r\nimport ChampionsFilters from './ChampionsFilters';\r\nimport ChampionsSearchForm from './ChampionsSearchForm.js';\r\n\r\nfunction ChampionsSearcher(props) \r\n{\r\n  return (\r\n    <div className=\"champions-searcher\">\r\n      <ChampionsFilters \r\n        filters={['All', ...Config.championsTags]} \r\n        selectedTagFilter={props.selectedTagFilter}\r\n        onFilterClick={props.onFilterClick} \r\n      />\r\n      <ChampionsSearchForm value={props.searchValue} onInputChange={props.onSearchInputChange} />\r\n      {Object.keys(props.champions).length > 0 \r\n        ? <ChampionsList champions={props.champions} />\r\n        : <div className=\"no-champions-notification-container\">\r\n            <p>No champions match the filter criteria.</p>\r\n          </div>\r\n      } \r\n    </div>\r\n  );\r\n};\r\n\r\nChampionsSearcher.propTypes = {\r\n  champions: PropTypes.object,\r\n  searchValue: PropTypes.string,\r\n  selectedTagFilter: PropTypes.string,\r\n  onSearchInputChange: PropTypes.func,\r\n  onFilterClick: PropTypes.func\r\n};\r\n\r\nexport default ChampionsSearcher;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, Link, useRouteMatch } from 'react-router';\r\nimport Cliploader from \"react-spinners/ClipLoader\";\r\nimport * as Config from '../config';\r\nimport * as Utils from '../Utils';\r\nimport * as APIUtils from '../api/APIUtils';\r\nimport ChampionsSearcher from './ChampionsSearcher';\r\n\r\nfunction ChampionsPage(props) {\r\n  const [champions, setChampions] = useState([]);\r\n  const [filteredChampions, setFilteredChampions] = useState([]);\r\n  const [searchFilter, setSearchFilter] = useState('');\r\n  const [tagFilter, setTagFilter] = useState('All');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await APIUtils.getAllChampions();\r\n        setChampions(data);\r\n        setFilteredChampions(data);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // setState callback simulation with hooks\r\n  // if searchFilter or tag filter state changes, run filter function\r\n  useEffect(() => {\r\n    filterChampionsList();\r\n  }, [searchFilter, tagFilter]);\r\n\r\n  function handleSearchInputChange(searchValue) {\r\n    // action is batched to excute it in the future, similar to setState\r\n    setSearchFilter(searchValue);\r\n\r\n    // do not do this\r\n    //filterChampionsList();\r\n\r\n  }\r\n\r\n  function handleFilterClick(tagValue) {\r\n    // action is batched to excute it in the future, similar to setState\r\n\r\n    setTagFilter(tagValue);\r\n\r\n     // do not do this\r\n    //filterChampionsList();\r\n  }\r\n\r\n  function filterChampionsList() {\r\n    let filteredData;\r\n    // filtering by name\r\n    filteredData = Utils.filterObjectByKey(champions, searchFilter);\r\n    \r\n    // after filtering by name, filter by tag\r\n    filteredData = Utils.filterChampionsByTag(filteredData, tagFilter);\r\n    \r\n    // setting filtered data\r\n    setFilteredChampions(filteredData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"champions-page\">\r\n      {isLoading \r\n        ? <div className=\"full-screen-loader-container\">\r\n            <Cliploader loading={isLoading} size={200} color=\"#C2902D\" />\r\n          </div>\r\n        : <ChampionsSearcher \r\n            champions={filteredChampions} \r\n            searchInputValue={searchFilter}\r\n            selectedTagFilter={tagFilter}\r\n            onSearchInputChange={handleSearchInputChange}\r\n            onFilterClick={handleFilterClick}\r\n          />\r\n      }\r\n      {isError && <div>Something went wrong 😥</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsPage.propTypes = {};\r\n\r\nexport default ChampionsPage;\r\n","export const filterObjectByKey = (object, filterKey) => {\r\n  const filteredObject = Object.keys(object)\r\n    .filter((key) => key.toLowerCase().includes(filterKey.toLowerCase()))\r\n    .reduce((newObject, key) => {\r\n      newObject[key] = object[key];\r\n      return newObject;\r\n    }, {});\r\n\r\n  return filteredObject;\r\n};\r\n\r\n// filter champions by tag\r\nexport const filterChampionsByTag = (champions, tag) => {\r\n  if (tag === 'All') {\r\n    return champions;\r\n  }\r\n\r\n  const filteredData = Object.keys(champions)\r\n    .filter((championKey) => {\r\n      return champions[championKey].tags.includes(tag);\r\n    })\r\n    .reduce((newObject, key) => {\r\n      newObject[key] = champions[key];\r\n      return newObject;\r\n    }, {});\r\n\r\n  return filteredData;\r\n};\r\n\r\n\r\n// sleep utility function, you can await it!\r\nexport const sleep = (ms) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import { useParams } from 'react-router-dom';;\r\n\r\nfunction ChampionInfo(props) {\r\n  let { champion } = useParams();\r\n  \r\n  return (\r\n    <div>\r\n      <h1>{champion}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChampionInfo;\r\n","import React from 'react';\r\nimport { \r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport ChampionsPage from './ChampionsPage';\r\nimport ChampionInfo from './ChampionInfo';\r\nimport ChampionsList from './ChampionsList';\r\nimport ChampionListItem from './ChampionListItem';\r\nimport ChampionsFilters from './ChampionsFilters';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/champions\">Champions</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/champions/:champion\">\r\n            <ChampionInfo />\r\n          </Route>\r\n          <Route path=\"/champions\">\r\n            <ChampionsPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}