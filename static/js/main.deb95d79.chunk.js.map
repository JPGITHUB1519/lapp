{"version":3,"sources":["components/Home.js","config.js","api/APIUtils.js","Utils.js","components/ChampionAvatar.js","components/ChampionListItem.js","components/ChampionsList.js","components/ChampionFilter.js","components/ChampionsFilters.js","components/ChampionsSearchForm.js","components/ChampionsSearcher.js","components/ChampionsPage.js","components/ChampionBuildLinks.js","components/champion-info/ChampionBasicInfo.js","components/champion-info/ChampionAbilitiesInfo.js","components/champion-info/ChampionSkinsGallery.js","components/champion-info/ChampionInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["Home","championsTags","LOL_VERSION","DATADRAGON_CDN_URL","DATADRAGON_DATA_FILES_URL","DATADRAGON_VERSIONED_IMAGES_URL","DATADRAGON_IMAGES_URL","getAllChampions","a","axios","result","championsData","data","getChampionById","championID","generateUggBuildLink","generateOpggBuildLink","generateProBuildLink","generateBlitzggLink","ChampionAvatar","props","className","src","image","alt","width","height","ChampionListItem","champion","match","useRouteMatch","to","url","id","group","full","name","ChampionsList","Object","keys","champions","map","key","ChampionFilter","onClick","event","filterName","selected","ChampionsFilters","filters","filter","onFilterClick","selectedTagFilter","ChampionsSearchForm","value","placeholder","onChange","onInputChange","target","ChampionsSearcher","Config","searchValue","onSearchInputChange","length","ChampionsPage","useState","setChampions","filteredChampions","setFilteredChampions","searchFilter","setSearchFilter","tagFilter","setTagFilter","isLoading","setIsLoading","isError","setIsError","useEffect","APIUtils","fetchData","filteredData","object","filterKey","toLowerCase","includes","reduce","newObject","tag","championKey","tags","Utils","filterChampionsList","loading","size","color","searchInputValue","tagValue","ChampionBuildLinks","championsBuildLinks","class","pageKey","href","ChampionBasicInfo","championData","title","lore","info","difficulty","ChampionAbilitiesInfo","passive","description","spells","spell","ChampionSkinsGallery","skins","skin","num","ChampionInfo","setChampionData","useParams","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deb95d79.chunk.js","sourcesContent":["const Home = () => {\r\n  return (\r\n    <h1>HomePage</h1>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const championsTags = [\r\n  'Assassin',\r\n  'Fighter',\r\n  'Mage',\r\n  'Marksman',\r\n  'Support',\r\n  'Tank'\r\n];\r\n\r\nexport const championsAbilitiesKeys = [\r\n  'Q', 'W', 'E', 'R'\r\n];\r\n","import axios from 'axios';\r\nimport * as Utils from '../Utils';\r\n\r\nconst LOL_VERSION = '11.11.1';\r\nconst LANGUAGE = 'en_US';\r\nconst DATADRAGON_CDN_URL = 'https://ddragon.leagueoflegends.com/cdn';\r\nconst DATADRAGON_API_URL = 'https://ddragon.leagueoflegends.com/api';\r\nconst DATADRAGON_DATA_FILES_URL = `${DATADRAGON_CDN_URL}/${LOL_VERSION}/data/${LANGUAGE}`;\r\nexport const DATADRAGON_VERSIONED_IMAGES_URL = `${DATADRAGON_CDN_URL}/${LOL_VERSION}\\\\img`;\r\n// not versioned images\r\nexport const DATADRAGON_IMAGES_URL = `${DATADRAGON_CDN_URL}/img`; \r\n\r\n// champions abilities cdn\r\n// https://d28xe8vt774jo5.cloudfront.net/champion-abilities/0008/ability_0008_Q1.webm\r\nconst CHAMPION_ABILITIES_VIDEOS_CDN = 'https://d28xe8vt774jo5.cloudfront.net/champion-abilities';\r\n\r\nexport const getAvailableLanguages = async () => {\r\n  const result = await axios(`${DATADRAGON_CDN_URL}/languages.json`);\r\n\r\n  return result.data;\r\n};\r\n\r\n// get the latest datadragon version\r\nexport const getLatestVersion = async () => {\r\n  let latestVersion;\r\n  const result = await axios(`${DATADRAGON_API_URL}/versions.json`);\r\n\r\n  if (result.data) {\r\n    latestVersion = result.data[0];\r\n  }\r\n  return latestVersion;\r\n};\r\n\r\n// get all the datadragon versions\r\nexport const getVersions = async () => {\r\n  const result = await axios(`${DATADRAGON_API_URL}/versions.json`);\r\n  return result.data;\r\n};\r\n\r\n// get all lol champions data\r\nexport const getAllChampions = async () => {\r\n  const result = await axios(`${DATADRAGON_DATA_FILES_URL}/champion.json`);\r\n  const championsData = result.data.data;\r\n\r\n  return championsData;\r\n};\r\n\r\n// get champion indiviaual data by ID\r\nexport const getChampionById = async (championID) => {\r\n  const result = await axios(\r\n    `${DATADRAGON_DATA_FILES_URL}/champion/${championID}.json`\r\n  );\r\n  \r\n  const data = result.data.data;\r\n\r\n  return data;\r\n};\r\n\r\nexport const getChampionAbilityVideoURL = (championKey, ability) => {\r\n  const championIdentifier = championKey.padStart(4, '0');\r\n  const videoFormat = '.webm';\r\n  const url = `${CHAMPION_ABILITIES_VIDEOS_CDN}/${championIdentifier}/ability_${championIdentifier}_${ability}1${videoFormat}`;\r\n  \r\n  return url;\r\n  //https://d28xe8vt774jo5.cloudfront.net/champion-abilities/00${champion.id}/ability_00\r\n};\r\n","import { championsAbilitiesKeys } from './config';\r\nimport { getChampionAbilityVideoURL } from './api/APIUtils';\r\n\r\n\r\nexport const filterObjectByKey = (object, filterKey) => {\r\n  const filteredObject = Object.keys(object)\r\n    .filter((key) => key.toLowerCase().includes(filterKey.toLowerCase()))\r\n    .reduce((newObject, key) => {\r\n      newObject[key] = object[key];\r\n      return newObject;\r\n    }, {});\r\n\r\n  return filteredObject;\r\n};\r\n\r\n// filter champions by tag\r\nexport const filterChampionsByTag = (champions, tag) => {\r\n  if (tag === 'All') {\r\n    return champions;\r\n  }\r\n\r\n  const filteredData = Object.keys(champions)\r\n    .filter((championKey) => {\r\n      return champions[championKey].tags.includes(tag);\r\n    })\r\n    .reduce((newObject, key) => {\r\n      newObject[key] = champions[key];\r\n      return newObject;\r\n    }, {});\r\n\r\n  return filteredData;\r\n};\r\n\r\n// sleep utility function, you can await it!\r\nexport const sleep = (ms) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n// champions link builds links generators\r\nexport const generateUggBuildLink = (championID) => {\r\n  const link = `https://u.gg/lol/champions/${championID}/build`;\r\n  return link;\r\n};\r\n\r\nexport const generateOpggBuildLink = (championID) => {\r\n  const link = `https://na.op.gg/champion/${championID}/statistics/`;\r\n  return link;\r\n};\r\n\r\nexport const generateProBuildLink = (championID) => {\r\n  const link = `https://www.probuilds.net/champions/details/${championID}`;\r\n  return link;\r\n};\r\n\r\nexport const generateBlitzggLink = (championID) => {\r\n  const link = `https://blitz.gg/lol/champions/${championID}`;\r\n  return link;\r\n};\r\n\r\nexport const generateChampionBuildLinks = (championID) => {\r\n  return {\r\n    'u.gg' : generateUggBuildLink(championID),\r\n    'op.gg' : generateOpggBuildLink(championID),\r\n    'probuilds': generateProBuildLink(championID),\r\n    'blitz.gg': generateBlitzggLink(championID)\r\n  };\r\n};\r\n\r\nexport const getChampionAbilitiesVideosURLS = (championKey) => {\r\n  const championAbilitiesVideosURLS = {};\r\n  championsAbilitiesKeys.forEach((ability) => {\r\n    championAbilitiesVideosURLS[ability] = getChampionAbilityVideoURL(championKey, ability);\r\n  });\r\n  return championAbilitiesVideosURLS;\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ChampionAvatar(props) {\r\n  return (\r\n    <img className='responsive-image' src={props.image} alt={props.alt} width={props.width} height={props.height} />\r\n  );\r\n}\r\n\r\nChampionAvatar.propTypes = {\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nexport default ChampionAvatar;\r\n","import PropTypes from 'prop-types';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport ChampionAvatar from './ChampionAvatar';\r\nimport { DATADRAGON_VERSIONED_IMAGES_URL } from '../api/APIUtils';\r\n\r\nfunction ChampionListItem(props) {\r\n  const champion = props.champion;\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    // do not use absoulute url to={/champions/....} it will be a headache to change it on the future\r\n    <Link className=\"champions-list-item\" to={`${match.url}/${champion.id}`}>\r\n      <ChampionAvatar \r\n        image={`${DATADRAGON_VERSIONED_IMAGES_URL}\\\\${champion.image.group}\\\\${champion.image.full}`}\r\n        alt={champion.name} \r\n        width={100}\r\n        height={100}\r\n      />\r\n      <p>{champion.name}</p>\r\n    </Link>\r\n  );\r\n}\r\n\r\nChampionListItem.propTypes = {\r\n  champion: PropTypes.object\r\n};\r\n\r\nexport default ChampionListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ChampionListItem from './ChampionListItem';\r\n\r\nfunction ChampionsList(props) {\r\n\r\n  return (\r\n    <div className=\"champions-list\">\r\n      {Object.keys(props.champions).map(key => {\r\n        const champion = props.champions[key];\r\n\r\n        return <ChampionListItem \r\n                key={champion.key}\r\n                champion={champion}\r\n              />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsList.propTypes = {\r\n  champions: PropTypes.object\r\n};\r\n\r\nexport default ChampionsList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ChampionFilter(props) {\r\n  function handleClick(event) {\r\n    props.onClick(props.filterName);\r\n  }\r\n  return (\r\n    <button \r\n      onClick={handleClick} \r\n      className={`tag-filter-button ${props.selected ? 'tag-filter-button--selected' : ''}`}>\r\n        {props.filterName}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ChampionFilter;\r\n\r\nChampionFilter.propTypes = {\r\n  filterName: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ChampionFilter from './ChampionFilter';\r\n\r\nfunction ChampionsFilters(props) {\r\n  return (\r\n    <div className=\"champions-filter\">\r\n      {props.filters.map(filter => {\r\n        return <ChampionFilter \r\n                filterName={filter} \r\n                onClick={props.onFilterClick} \r\n                selected={filter === props.selectedTagFilter}\r\n              />\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsFilters.propTypes = {\r\n  filters: PropTypes.array,\r\n  selectedTagFilter: PropTypes.string,\r\n  onFilterClick: PropTypes.func\r\n};\r\n\r\nexport default ChampionsFilters;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ChampionsSearchForm(props) {\r\n\r\n  function handleInputChange(event) {\r\n    props.onInputChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <form className=\"champion-search-form\">\r\n      <input \r\n        className=\"champion-search-form__input\"\r\n        value={props.value}\r\n        placeholder=\"Search for a champion...\"\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\n// function useSearchForm(props) {\r\n//   const [search, setSearch] = useState(null);\r\n\r\n//   return {search, setSearch};\r\n// }\r\n\r\n\r\nChampionsSearchForm.propTypes = {\r\n  value: PropTypes.string,\r\n  onInputChange: PropTypes.func\r\n};\r\n\r\nexport default ChampionsSearchForm;\r\n","import PropTypes from 'prop-types';\r\nimport * as Config from '../config';\r\nimport ChampionsList from './ChampionsList';\r\nimport ChampionsFilters from './ChampionsFilters';\r\nimport ChampionsSearchForm from './ChampionsSearchForm.js';\r\n\r\nfunction ChampionsSearcher(props) \r\n{\r\n  return (\r\n    <div className=\"champions-searcher\">\r\n      <ChampionsFilters \r\n        filters={['All', ...Config.championsTags]} \r\n        selectedTagFilter={props.selectedTagFilter}\r\n        onFilterClick={props.onFilterClick} \r\n      />\r\n      <ChampionsSearchForm value={props.searchValue} onInputChange={props.onSearchInputChange} />\r\n      {Object.keys(props.champions).length > 0 \r\n        ? <ChampionsList champions={props.champions} />\r\n        : <div className=\"no-champions-notification-container\">\r\n            <p>No champions match the filter criteria.</p>\r\n          </div>\r\n      } \r\n    </div>\r\n  );\r\n};\r\n\r\nChampionsSearcher.propTypes = {\r\n  champions: PropTypes.object,\r\n  searchValue: PropTypes.string,\r\n  selectedTagFilter: PropTypes.string,\r\n  onSearchInputChange: PropTypes.func,\r\n  onFilterClick: PropTypes.func\r\n};\r\n\r\nexport default ChampionsSearcher;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, Link, useRouteMatch } from 'react-router';\r\nimport Cliploader from \"react-spinners/ClipLoader\";\r\nimport * as Config from '../config';\r\nimport * as Utils from '../Utils';\r\nimport * as APIUtils from '../api/APIUtils';\r\nimport ChampionsSearcher from './ChampionsSearcher';\r\n\r\nfunction ChampionsPage(props) {\r\n  const [champions, setChampions] = useState([]);\r\n  const [filteredChampions, setFilteredChampions] = useState([]);\r\n  const [searchFilter, setSearchFilter] = useState('');\r\n  const [tagFilter, setTagFilter] = useState('All');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const data = await APIUtils.getAllChampions();\r\n        setChampions(data);\r\n        setFilteredChampions(data);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // setState callback simulation with hooks\r\n  // if searchFilter or tag filter state changes, run filter function\r\n  useEffect(() => {\r\n    filterChampionsList();\r\n  }, [searchFilter, tagFilter]);\r\n\r\n  function handleSearchInputChange(searchValue) {\r\n    // action is batched to excute it in the future, similar to setState\r\n    setSearchFilter(searchValue);\r\n\r\n    // do not do this\r\n    //filterChampionsList();\r\n\r\n  }\r\n\r\n  function handleFilterClick(tagValue) {\r\n    // action is batched to excute it in the future, similar to setState\r\n\r\n    setTagFilter(tagValue);\r\n\r\n     // do not do this\r\n    //filterChampionsList();\r\n  }\r\n\r\n  function filterChampionsList() {\r\n    let filteredData;\r\n    // filtering by name\r\n    filteredData = Utils.filterObjectByKey(champions, searchFilter);\r\n    \r\n    // after filtering by name, filter by tag\r\n    filteredData = Utils.filterChampionsByTag(filteredData, tagFilter);\r\n    \r\n    // setting filtered data\r\n    setFilteredChampions(filteredData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"champions-page\">\r\n      {isLoading \r\n        ? <div className=\"full-screen-loader-container\">\r\n            <Cliploader loading={isLoading} size={200} color=\"#C2902D\" />\r\n          </div>\r\n        : <ChampionsSearcher \r\n            champions={filteredChampions} \r\n            searchInputValue={searchFilter}\r\n            selectedTagFilter={tagFilter}\r\n            onSearchInputChange={handleSearchInputChange}\r\n            onFilterClick={handleFilterClick}\r\n          />\r\n      }\r\n      {isError && <p>Something went wrong 😥</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionsPage.propTypes = {};\r\n\r\nexport default ChampionsPage;\r\n","import PropTypes from 'prop-types';\r\nimport * as Utils from '../Utils';\r\n\r\nfunction ChampionBuildLinks(props) {\r\n  const championsBuildLinks = Utils.generateChampionBuildLinks(props.championID);\r\n  \r\n  return (\r\n    <div class=\"champion-build-links\">\r\n      {Object.keys(championsBuildLinks).map(pageKey => {\r\n        return <a href={championsBuildLinks[pageKey]} className=\"champion-build-links__link\" target=\"_blank\">{pageKey}</a>\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nChampionBuildLinks.propTypes = {\r\n  championID: PropTypes.string\r\n};\r\n\r\nexport default ChampionBuildLinks;\r\n","import PropTypes from 'prop-types';\r\nimport ChampionAvatar from '../ChampionAvatar';\r\nimport ChampionBuildLinks from '../ChampionBuildLinks';\r\nimport { DATADRAGON_VERSIONED_IMAGES_URL, DATADRAGON_IMAGES_URL } from '../../api/APIUtils';\r\n\r\nfunction ChampionBasicInfo(props) {\r\n  const { championData } = props;\r\n\r\n  return (\r\n    <div className=\"champion-basic-info\">\r\n      <ChampionAvatar \r\n        image={`${DATADRAGON_IMAGES_URL}\\\\${championData.image.group}\\\\splash\\\\${championData.id}_0.jpg`}\r\n        alt={championData.name}\r\n      />\r\n      <ChampionBuildLinks championID={championData.id} />\r\n      <p>Name: {championData.name}</p><br />\r\n      <p>Title: {championData.title} </p><br />\r\n      <p>Lore: {championData.lore} </p><br />\r\n      {/* championData is not available on first render so we have to short circuit! */}\r\n      <p>Role: {championData.tags ? championData.tags[0] : ''}</p><br />\r\n      <p>Difficulty: {championData.info ? championData.info.difficulty : ''}</p><br />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChampionBasicInfo;\r\n\r\nChampionBasicInfo.propTypes = {\r\n  championData: PropTypes.object\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ChampionAvatar from '../ChampionAvatar';\r\nimport { DATADRAGON_VERSIONED_IMAGES_URL, DATADRAGON_IMAGES_URL, getChampionAbilityVideoURL } from '../../api/APIUtils';\r\n\r\nfunction ChampionAbilitiesInfo(props) {\r\n  const { championData } = props;\r\n\r\n  return (\r\n    <div className=\"champion-abilities-info\">\r\n      <h2>Abilities</h2>\r\n      <ChampionAvatar \r\n        image={`${DATADRAGON_VERSIONED_IMAGES_URL}\\\\${championData.passive.image.group}\\\\${championData.passive.image.full}`} \r\n        alt={championData.passive.name}\r\n      />\r\n      <p>Passive - {championData.passive.name}</p>\r\n      <p>{championData.passive.description}</p>\r\n\r\n      {championData.spells.map(spell => {\r\n        return (\r\n          <div>\r\n            <ChampionAvatar \r\n              image={`${DATADRAGON_VERSIONED_IMAGES_URL}\\\\${spell.image.group}\\\\${spell.image.full}`} \r\n              alt={spell.name}\r\n            />\r\n            <b>{spell.name}</b>\r\n            <p>{spell.description}</p>\r\n            <br></br>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChampionAbilitiesInfo;\r\n\r\nChampionAbilitiesInfo.propTypes = {\r\n  championData: PropTypes.object\r\n};\r\n","import PropTypes, { object } from 'prop-types';\r\nimport ChampionAvatar from '../ChampionAvatar';\r\nimport { DATADRAGON_VERSIONED_IMAGES_URL, DATADRAGON_IMAGES_URL} from '../../api/APIUtils';\r\n\r\nfunction ChampionSkinsGallery(props) {\r\n  const { championData } = props;\r\n  return (\r\n    <div className=\"champion-skins-gallery\">\r\n      <h2>Skins:</h2>\r\n        {championData.skins.map(skin => {\r\n          return (\r\n            <>\r\n              <p>{skin.name}</p>\r\n              <ChampionAvatar \r\n                image={`${DATADRAGON_IMAGES_URL}\\\\${championData.image.group}\\\\splash\\\\${championData.id}_${skin.num}.jpg`} \r\n                alt={skin.name}\r\n                width={500}\r\n                height={300}\r\n              />\r\n            </>\r\n          );\r\n        })}  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChampionSkinsGallery;\r\n\r\nChampionSkinsGallery.propTypes = {\r\n  championData: PropTypes.object\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Cliploader from \"react-spinners/ClipLoader\";\r\nimport * as APIUtils from '../../api/APIUtils';\r\nimport ChampionAvatar from '../ChampionAvatar';\r\nimport ChampionBuildLinks from '../ChampionBuildLinks';\r\nimport { DATADRAGON_VERSIONED_IMAGES_URL, DATADRAGON_IMAGES_URL, getChampionAbilityVideoURL } from '../../api/APIUtils';\r\nimport * as Utils from '../../Utils';\r\nimport ChampionBasicInfo from './ChampionBasicInfo';\r\nimport ChampionAbilitiesInfo from './ChampionAbilitiesInfo';\r\nimport ChampionSkinsGallery from './ChampionSkinsGallery';\r\n\r\nfunction ChampionInfo(props) {\r\n  const [championData, setChampionData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  \r\n  let { championID } = useParams();\r\n\r\n  // use effect runs after the first render\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const data = await APIUtils.getChampionById(championID);\r\n        setChampionData(data[championID]);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // if (Object.keys(championData).length > 0) {\r\n  //   const abilitiesVideosUrl = Utils.getChampionAbilitiesVideosURLS(championData.key)\r\n  //   console.log(abilitiesVideosUrl);\r\n  // }\r\n\r\n  //console.log(getChampionAbilityVideoURL(championData.key, 'Q'));\r\n\r\n\r\n  return (\r\n    <div className=\"champion-info\">\r\n      {isLoading\r\n        ? <div className=\"full-screen-loader-container\">\r\n            <Cliploader loading={isLoading} size={200} color=\"#C2902D\" />\r\n          </div>\r\n        : Object.keys(championData).length > 0 && \r\n          <>\r\n            <ChampionBasicInfo championData={championData} />\r\n            <ChampionAbilitiesInfo championData={championData} />\r\n            <ChampionSkinsGallery championData={championData} />\r\n            <br></br>          \r\n          </>\r\n      }\r\n\r\n      {isError && <p>Something went wrong 😥</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChampionInfo;\r\n","import React from 'react';\r\nimport { \r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport ChampionsPage from './ChampionsPage';\r\nimport ChampionInfo from './champion-info/ChampionInfo';\r\nimport ChampionsList from './ChampionsList';\r\nimport ChampionListItem from './ChampionListItem';\r\nimport ChampionsFilters from './ChampionsFilters';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div class='container'>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/champions\">Champions</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          {/* the child component will be rendered when the path is matched */}\r\n          <Route path=\"/champions/:championID\">\r\n            <ChampionInfo />\r\n          </Route>\r\n          <Route path=\"/champions\">\r\n            <ChampionsPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}