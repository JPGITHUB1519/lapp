Lapp Versions:

  V1:
    - Champions info page clone 
    - Runes, Objects, Build -> Link to OP.GG, U.gg and Probuilds for now
    - For the Vi I only need the DataDragon (static data)
    - UI Style will Match Lol Client -> https://runeforge.gg/
    - Multiple Languages Constant, Select Your Language?
  
  V1.1
    - Add Champions Counter to the Champion info individual page

  other Versions:
    - News
    - RuneForge Style Clone
    - U.gg, Op.gg Clones (will think on design later)
    - Lol Name Availability Checker
    - Lol Mastery


Sections:

  - Champions Info (similar to https://universe.leagueoflegends.com/en_US/champions/, https://na.leagueoflegends.com/en-us/champions/)
    - Page with All the Champions
      * Search Champions
      * Sort By: A - Z, Newest, Region
  
  - Champion Info Specific Page (similar to https://na.leagueoflegends.com/en-us/champions/teemo/)


Components:

  - ChampionsInfo
    - ChampionSearcher
      - ChampionsList
        - ChampionsListItem  
          ChampionAvatar

          <label>
  

  - ChampionsSearchForm

  - ChampionFilters
    ChampionFilter

  ChampionAvatar
    img

Routes:
  /
  /champions
  /champions/:championName

Color: 
  rgb(194, 144, 45);
  #c2902d

Backlog:

  To do:
    - Support Multiple Languages By URL -> use React.Context for this
    - Implement Dark Mode -> use React.Context for this
    - Create global component for full screen loader
    - Create global component for something went global
    - Create global hooks for api calls status? data, isError, isLoading etc... ?
    - Move state logic from championsInfo to championsSearch?
    - create a wrapper function to generate datadragon cdn
    - when the name is too long (for example Nunu and Willump) only 2 columns is shown on mobile

  Doing:
    - Implementing champion info page
  Done:
    - Champions skins image gallery
    - Dynamic Abilities info component
    - divide champions info page in smaller components
    - Making Avatar responsive
    - Implement champions builds links component
    - Create Basic champion page and get data from API
    - Fix for using react router on github pages (but sill does not work on reload)
    - Add basic ChampionInfo Component and basic routing and links
    - Rename ChampionsInfo Component to ChampionsPage. 
    - Add React Routing and basic route for the project
    - Add No champions match the filter criteria or not champions found to searcher
    - loading spinner
    - Adding Some basic styling with CSS
    - Centering content on Desktop and adding a max-width of 960px
    - champions filters by tag. Remember if search !== empty filter also by tag
    - champions filtering by Search
      Why it is slow ?
        It is only slow because the bandwidth that takes to load all the images from the server
        (it is not slow because react). If we remove the image or enable cache on chrome it will be fast af again.

    - show correct image for each champions
    - Reading and Understanding LOL API and DataDragon
    - Seting up Project, initial files and files structure
    - Start Working on V1, Static Components 
    - Add helpers API data fetchers
    - Add initial State and Data fetching
    - Show Champions List 
  
  Limits:
    Champions By role (top, mid, jungle, bottom, support)
      the api does not give this data and it's hard to maintain that for them between patch
    
    there is inconsistency on the champions abilities names  for example:
      1. <champion_name>q  <champion_name>w  <champion_name>e  <champion_name>r
      2. VladimirQ, VladimirSanguine, Pool, VladimirE, VladimirHemoplague


